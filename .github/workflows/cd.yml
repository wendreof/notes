name: CD

# This action will be triggered on every new tag
# For this example I'm using a tag named v1.0.1
on:
  push:
    tags:
      - "*"

env:
  JAVA_VERSION: "12.x"
  #change it to your project version
  FLUTTER_VERSION: "2.2.3"
  #change it to your project channel
  FLUTTER_CHANNEL: "stable"
  PROPERTIES_PATH: "./android/key.properties"

jobs:
  publish_playstore:
    name: (Release) Publish PlayStore
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Mandatory to use the extract version from tag action
      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.0.0
      - uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VERSION}}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}

      # Creating the key.properties file
      - run: |
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" > service_account.json
          echo keyPassword=\${{ secrets.KEY_STORE }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}
          echo storeFile=\"key.jks" >> ${{env.PROPERTIES_PATH}}

      # Decoding base64 key into a file
      - run: echo "${{ secrets.KEYSTORE2 }}" | base64 --decode > android/app/key.jks

      # Get dependencies and make assigned appbundle
      - run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          pub global activate cider
          cider version ${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}
          flutter pub get
          flutter build appbundle --release

      # Make appbundle downloadable
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: appbundle_release
          path: build/app/outputs/bundle/release

      # # Creating googleServices.json
      # - name: Create service_account.json FROM secrets.SERVICE_ACCOUNT_JSON

      # Upload file to Play Store
      - name: Upload play store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: br.com.wendreof.w_notes
          releaseFiles: build/app/outputs/bundle/release/*.aab
          track: production
          status: completed
          inAppUpdatePriority: 2
          releaseName: ${{ env.NUMBER_OF_COMMITS }} (${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }})
          whatsNewDirectory: distribution/whatsnew
          mappingFile: build/app/outputs/mapping/release/mapping.txt

      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: GitHub Actions
          author_email: actions@github.com
          branch: master
          message: "Update version on pubspec.yaml"
          push: origin master --force
